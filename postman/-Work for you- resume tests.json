{
	"info": {
		"_postman_id": "d1195832-c190-417b-8a33-15aa90f9a78b",
		"name": "\"Work for you\" - main service",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Resume",
			"item": [
				{
					"name": "Добавление нового пользователя",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Ответ должен содержать код статуса 201 и данные в формате json\", function () {",
									"    pm.response.to.have.status(201);",
									"    pm.response.to.be.withBody;",
									"    pm.response.to.be.json;",
									"});",
									"",
									"const source = JSON.parse(pm.request.body.raw);",
									"const target = pm.response.json();",
									"",
									"pm.test(\"Пользователь должен содержать поля: id, name, email\", function () {",
									"pm.expect(target).to.have.property('id');",
									"pm.expect(target).to.have.property('name');",
									"pm.expect(target).to.have.property('email');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"name\": \"Daniil\",\n   \"email\": \"dan@gmail.com\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/admin/users",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"admin",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Добавление нового резюме пользователя",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Ответ должен содержать код статуса 201 и данные в формате json\", function () {",
									"    pm.response.to.have.status(201);",
									"    pm.response.to.be.withBody;",
									"    pm.response.to.be.json;",
									"});",
									"",
									"const source = JSON.parse(pm.request.body.raw);",
									"const target = pm.response.json();",
									"",
									"pm.test(\"Пользователь должен содержать поля: id, description\", function () {",
									"pm.expect(target).to.have.property('id');",
									"pm.expect(target).to.have.property('description');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"description\": \"the best surveyor is looking for a job\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/users/:userId/resumes",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"users",
								":userId",
								"resumes"
							],
							"variable": [
								{
									"key": "userId",
									"value": "1",
									"description": "user id"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Редактирование резюме пользователем",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Ответ должен содержать код статуса 200 и данные в формате json\", function () {",
									"    pm.response.to.have.status(200);",
									"    pm.response.to.be.withBody;",
									"    pm.response.to.be.json;",
									"});",
									"",
									"const source = JSON.parse(pm.request.body.raw);",
									"const target = pm.response.json();",
									"",
									"pm.test(\"Пользователь должен содержать поля: id, description\", function () {",
									"pm.expect(target).to.have.property('id');",
									"pm.expect(target).to.have.property('description');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"description\": \"the best surveyor is looking for a job and really wants to earn a lot \"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/users/:userId/resumes/:resumeId",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"users",
								":userId",
								"resumes",
								":resumeId"
							],
							"variable": [
								{
									"key": "userId",
									"value": "1",
									"description": "user id"
								},
								{
									"key": "resumeId",
									"value": "1",
									"description": "resume id"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Получение всех резюме пользователя",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Ответ должен содержать код статуса 200 и данные в формате json\", function () {",
									"    pm.response.to.be.ok;    ",
									"    pm.response.to.be.withBody;",
									"    pm.response.to.be.json;",
									"});",
									"",
									"const source = pm.collectionVariables.get('response');",
									"const target = pm.response.json();",
									"",
									"pm.test(\"Резюме должно содержать поля: id, description, createdOn, creator\", function () {",
									"pm.expect(target[0]).to.have.property('id');",
									"    pm.expect(target[0]).to.have.property('description');",
									"    pm.expect(target[0]).to.have.property('createdOn');",
									"    pm.expect(target[0]).to.have.property('creator');",
									"});",
									"",
									"pm.test(\"Должно быть найдено только одно резюме\", function () {",
									"    pm.expect(target.length).to.eql(1);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/users/:userId/resumes",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"users",
								":userId",
								"resumes"
							],
							"variable": [
								{
									"key": "userId",
									"value": "1",
									"description": "user id"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Получение информации о резюме по его идентификатору",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Ответ должен содержать код статуса 200 и данные в формате json\", function () {",
									"    pm.response.to.be.ok;    ",
									"    pm.response.to.be.withBody;",
									"    pm.response.to.be.json;",
									"});",
									"",
									"const source = pm.collectionVariables.get('response');",
									"const target = pm.response.json();",
									"",
									"pm.test(\"Резюме должно содержать поля: id, description, createdOn, creator\", function () {",
									"pm.expect(target).to.have.property('id');",
									"    pm.expect(target).to.have.property('description');",
									"    pm.expect(target).to.have.property('createdOn');",
									"    pm.expect(target).to.have.property('creator');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/users/:userId/resumes/:resumeId",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"users",
								":userId",
								"resumes",
								":resumeId"
							],
							"variable": [
								{
									"key": "userId",
									"value": "1",
									"description": "user id"
								},
								{
									"key": "resumeId",
									"value": "1",
									"description": "resume id"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Удаление резюме пользователем",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Ответ должен содержать код статуса 204\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([204]);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/users/:userId/resumes/:resumeId",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"users",
								":userId",
								"resumes",
								":resumeId"
							],
							"variable": [
								{
									"key": "userId",
									"value": "1",
									"description": "user id"
								},
								{
									"key": "resumeId",
									"value": "1",
									"description": "resume id"
								}
							]
						}
					},
					"response": []
				}
			]
		}
	]
}